@keyframes example {
  0% {
    content: "";
  }
  25% {
    content: ".";
  }
  50% {
    content: "..";
  }
  75% {
    content: "...";
  }
  100% {
    content: "";
  }
}

.container {
  --button-hue: 3;
  --button-lightness: 1;
  --button-color: hsl(
    var(--button-hue),
    100%,
    calc(64% * var(--button-lightness))
  );
  --button-hover-color: hsl(
    var(--button-hue),
    61%,
    calc(51% * var(--button-lightness))
  );
  --button-background-color: hsl(var(--button-hue), 100%, 99%);
  --button-shadow-color: hsla(
    var(--button-hue),
    100%,
    calc(64% * var(--button-lightness)),
    25%
  );
  --button-shadow-hover-color: hsla(
    var(--button-hue),
    61%,
    calc(51% * var(--button-lightness)),
    25%
  );
}
body[data-theme="dark"] .container {
  --button-background-color: hsl(var(--button-hue), 8%, 18%);
}
.container[data-state="paused"],
.container[data-state="playing"] {
  --button-hue: 138;
  --button-lightness: 0.5;
}

.main {
  position: relative;
  text-align: center;
  height: 96px;
}

.recordButton,
.errorMessage {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  font-size: 20px;
}

.recordButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  text-transform: uppercase;
  height: 48px;
  padding: 0 12px;
  border-radius: 24px;
  border: 2px solid var(--button-color);
  color: var(--button-color);
  background-color: var(--button-background-color);
  box-shadow: 0 3px 15px 0 var(--button-shadow-color);
  white-space: nowrap;
}

.recordButton:hover {
  background-color: var(--button-color);
  color: white;
}

.recordButton:active {
  background-color: var(--button-hover-color);
  border-color: var(--button-hover-color);
  color: white;
  box-shadow: 0 3px 15px 0 var(--button-shadow-hover-color);
}

.recordButton:disabled {
  background-color: transparent;
  border: none;
  outline: none;
  box-shadow: none;
  cursor: auto;
  color: var(--dark-color);
}

.recordButton::before {
  font-family: "Material Symbols Outlined";
  font-weight: normal;
  padding-right: 0.33em;
}

.recordButton .text::before {
  content: var(--text);
}
.recordButton:disabled .text::after {
  position: absolute;
  content: '';
  animation: example 1.5s infinite;
}

.errorMessage {
  padding: 0 32px;
  width: 100%;
  max-width: 720px;
  color: var(--button-color);
}
.errorMessage::before {
  content: "\e000";
}

.container[data-state="loading"] .recordButton::before {
  content: "";
}
.container[data-state="loading"] .recordButton {
  --text: "Loading";
}

.container[data-state="readyToRecord"] .recordButton::before {
  content: "\e837";
}
.container[data-state="readyToRecord"] .recordButton {
  --text: "Record";
}

.container[data-state="recording"] .recordButton::before {
  content: "\e047";
}
.container[data-state="recording"] .recordButton {
  --text: "Stop";
}

.container[data-state="generating"] .recordButton::before {
  content: "";
}
.container[data-state="generating"] .recordButton {
  --text: "Piranha-fiying Song";
}

.container[data-state="paused"] .recordButton::before {
  content: "\e037";
}
.container[data-state="paused"] .recordButton {
  --text: "Play";
}

.container[data-state="playing"] .recordButton::before {
  content: "\e034";
}
.container[data-state="playing"] .recordButton {
  --text: "pause";
}

.errorMessage button {
  text-decoration: underline;
  text-decoration-thickness: 2px;
}

.uploadFileButton::before {
  content: "\f09b";
}
